// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScaleUP.Services.ProductAPI.Persistence;

#nullable disable

namespace ScaleUP.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ProductApplicationDbContext))]
    [Migration("20240106125201_6-Prod-2")]
    partial class _6Prod2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ActivityMasters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("CompanyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrontOrBack")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.CompanyCreditDays", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreditDaysMasterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductAnchorCompanyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreditDaysMasterId");

                    b.HasIndex("ProductAnchorCompanyId");

                    b.ToTable("CompanyCreditDays");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.CompanyEMIOptions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EMIOptionMasterId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductAnchorCompanyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EMIOptionMasterId");

                    b.HasIndex("ProductAnchorCompanyId");

                    b.ToTable("CompanyEMIOptions");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.CreditDayMasters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CreditDayMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.EMIOptionMasters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("EMIOptionMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductActivityMasters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityMasterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<long?>("SubActivityMasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivityMasterId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SubActivityMasterId");

                    b.ToTable("ProductActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductAnchorCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AgreementDocId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AgreementEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AgreementStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AgreementURL")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<double?>("AnnualInterestRate")
                        .HasColumnType("float");

                    b.Property<long>("BounceCharge")
                        .HasColumnType("bigint");

                    b.Property<double?>("CommissionPayout")
                        .HasColumnType("float");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<double?>("ConsiderationFee")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreditDays")
                        .HasColumnType("bigint");

                    b.Property<long?>("CustomCreditDays")
                        .HasColumnType("bigint");

                    b.Property<double>("DelayPenaltyRate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DisbursementSharingCommission")
                        .HasColumnType("float");

                    b.Property<long?>("DisbursementTAT")
                        .HasColumnType("bigint");

                    b.Property<long?>("EMIBounceCharge")
                        .HasColumnType("bigint");

                    b.Property<double?>("EMIPenaltyRate")
                        .HasColumnType("float");

                    b.Property<double?>("EMIProcessingFeeRate")
                        .HasColumnType("float");

                    b.Property<double?>("EMIRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MaxLoanAmount")
                        .HasColumnType("bigint");

                    b.Property<long?>("MaxTenureInMonth")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinLoanAmount")
                        .HasColumnType("bigint");

                    b.Property<long?>("MinTenureInMonth")
                        .HasColumnType("bigint");

                    b.Property<double?>("OfferMaxRate")
                        .HasColumnType("float");

                    b.Property<string>("ProcessingFeePayableBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("ProcessingFeeRate")
                        .HasColumnType("float");

                    b.Property<string>("ProcessingFeeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionFeePayableBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("TransactionFeeRate")
                        .HasColumnType("float");

                    b.Property<string>("TransactionFeeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductAnchorCompany");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductCompanies", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("BounceCharges")
                        .HasColumnType("float");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<double>("ConvenienceFee")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreditDays")
                        .HasColumnType("int");

                    b.Property<double>("DelayPenaltyFee")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GstRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProcessingCreditDays")
                        .HasColumnType("float");

                    b.Property<double>("ProcessingFee")
                        .HasColumnType("float");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCompanies");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductCompanyActivityMasters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityMasterId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<long?>("SubActivityMasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ActivityMasterId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SubActivityMasterId");

                    b.ToTable("ProductCompanyActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductNBFCCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("AgreementDocId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("AgreementEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("AgreementStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AgreementURL")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("BounceCharges")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CustomerAgreementDocId")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerAgreementURL")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PenaltyCharges")
                        .HasColumnType("bigint");

                    b.Property<long>("PlatformFee")
                        .HasColumnType("bigint");

                    b.Property<long>("ProcessingFee")
                        .HasColumnType("bigint");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SanctionLetterDocId")
                        .HasColumnType("bigint");

                    b.Property<string>("SanctionLetterURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductNBFCCompany");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.SubActivityMasters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ActivityMasterId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KycMasterCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivityMasterId");

                    b.ToTable("SubActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.CompanyCreditDays", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.CreditDayMasters", "CreditDayMasters")
                        .WithMany("CompanyCreditDays")
                        .HasForeignKey("CreditDaysMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScaleUP.Services.ProductModels.Master.ProductAnchorCompany", "ProductAnchorCompany")
                        .WithMany("CompanyCreditDays")
                        .HasForeignKey("ProductAnchorCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditDayMasters");

                    b.Navigation("ProductAnchorCompany");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.CompanyEMIOptions", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.EMIOptionMasters", "EMIOptionMasters")
                        .WithMany("CompanyEMIOptions")
                        .HasForeignKey("EMIOptionMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScaleUP.Services.ProductModels.Master.ProductAnchorCompany", "ProductAnchorCompany")
                        .WithMany("CompanyEMIOptions")
                        .HasForeignKey("ProductAnchorCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EMIOptionMasters");

                    b.Navigation("ProductAnchorCompany");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductActivityMasters", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.ActivityMasters", "ActivityMasters")
                        .WithMany()
                        .HasForeignKey("ActivityMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScaleUP.Services.ProductModels.Master.Product", "Product")
                        .WithMany("ProductActivityMasters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScaleUP.Services.ProductModels.Master.SubActivityMasters", "SubActivityMasters")
                        .WithMany()
                        .HasForeignKey("SubActivityMasterId");

                    b.Navigation("ActivityMasters");

                    b.Navigation("Product");

                    b.Navigation("SubActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductAnchorCompany", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductCompanies", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.Product", "Product")
                        .WithMany("ProductCompanies")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductCompanyActivityMasters", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.ActivityMasters", "ActivityMasters")
                        .WithMany()
                        .HasForeignKey("ActivityMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScaleUP.Services.ProductModels.Master.Product", "Product")
                        .WithMany("ProductCompanyActivityMasters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ScaleUP.Services.ProductModels.Master.SubActivityMasters", "SubActivityMasters")
                        .WithMany()
                        .HasForeignKey("SubActivityMasterId");

                    b.Navigation("ActivityMasters");

                    b.Navigation("Product");

                    b.Navigation("SubActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductNBFCCompany", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.SubActivityMasters", b =>
                {
                    b.HasOne("ScaleUP.Services.ProductModels.Master.ActivityMasters", "ActivityMasters")
                        .WithMany()
                        .HasForeignKey("ActivityMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.CreditDayMasters", b =>
                {
                    b.Navigation("CompanyCreditDays");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.EMIOptionMasters", b =>
                {
                    b.Navigation("CompanyEMIOptions");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.Product", b =>
                {
                    b.Navigation("ProductActivityMasters");

                    b.Navigation("ProductCompanies");

                    b.Navigation("ProductCompanyActivityMasters");
                });

            modelBuilder.Entity("ScaleUP.Services.ProductModels.Master.ProductAnchorCompany", b =>
                {
                    b.Navigation("CompanyCreditDays");

                    b.Navigation("CompanyEMIOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
